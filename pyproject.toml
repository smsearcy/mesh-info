[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mesh-info"
description = "Collect and display information about an AREDN mesh network."
version = "0.8.2"
readme = "README.rst"
authors = [{ name = "Scott Seary", email = "smsearcy@gmail.com" }]
requires-python = ">=3.9"
license = { text = "GNU General Public License v3 (GPLv3)" }
keywords = ["aredn", "mesh"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "aiohttp>=3.10.11",
  "alembic ~= 1.8",
  "async-timeout ; python_version < '3.11'",
  "attrs ~= 23.1",
  "environ-config ~= 23.2",
  "gunicorn >= 22.0",
  "pendulum~=3.1",
  "platformdirs ~= 2.0",
  "pyramid ~= 2.0",
  "pyramid-jinja2 ~= 2.10",
  "pyramid-retry ~= 2.1",
  "pyramid-services ~= 2.2",
  "pyramid-tm ~= 2.5",
  "python-dotenv ~= 0.20",
  "rich ~= 13.3",
  "structlog ~= 23.2",
  "sqlalchemy ~= 1.4",
  "transaction ~= 3.0",
  "rrdtool-bindings>=0.2.0",
  "zope-sqlalchemy>=1.6",
]

[dependency-groups]
dev = [
  "Faker>=25.3.0",
  "WebTest>=3.0.0",
  "mypy>=1.10.0",
  "pyramid-debugtoolbar>=4.12.1",
  "pytest-asyncio>=0.23.7",
  "pytest-cov>=5.0.0",
  "pytest-mock>=3.14.0",
  "pytest>=8.2.1",
  "ruff>=0.4.6",
  "sphinx-rtd-theme>=2.0.0",
  "sphinx>=7.3.7",
]

[project.urls]
Homepage = "https://github.com/smsearcy/mesh-info"
Documentation = "https://mesh-info-ki7onk.readthedocs.io/"

[project.scripts]
meshinfo = "meshinfo.cli:main"


[tool.hatch.build.targets.wheel]
include = ["alembic", "meshinfo"]


[tool.mypy]
# postponing enabling this for another day
# disallow_untyped_defs = true
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "appdirs.*",
  "hupper.*",
  "pyramid.*",
  "rrdtool.*",
  "sqlalchemy.*",
  "transaction.*",
  "zope.*",
]


[tool.ruff.format]
exclude = ["alembic/versions/*.py"]

[tool.ruff.lint]
select = [
  "A",   # flake8-builtins
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90", # mccabe
  "E",   # pycodestyle (error)
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "PLC", # pylint (convention)
  "PLE", # pylint (error)
  "PLW", # pylint (warning)
  "RET", # flake8-return
  "RUF",
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
  "W",   # pycodestyle (warning)
  "YTT", # flake8-2020
  # Saving these for another day
  # "D",  # pydocstyle
]

[tool.ruff.lint.isort]
known-third-party = ["alembic"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.mccabe]
max-complexity = 12
